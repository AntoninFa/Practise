# Copyright (C) 2016 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

---
server:
  #port: 8080
  compression:
    enabled: true
    mime-types: application/hal+json
    min-response-size: 2KB
  error.whitelabel.enabled: false
  http2.enabled: true
  ssl.bundle: microservice
  shutdown: graceful

spring:
  aop.proxy-target-class: false
  application.name: song
  datasource:
    url: jdbc:postgresql://localhost/song
    username: song
    password: p
  flyway:
    locations: classpath:db/migration/{vendor}
    create-schemas: false
    clean-disabled: false
  jpa:
    hibernate:
      # https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#configurations-hbmddl
      #ddl-auto: none
      naming.physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    open-in-view: false
    properties:
      # https://docs.jboss.org/hibernate/orm/6.1/javadocs/org/hibernate/cfg/AvailableSettings.html
      # https://docs.jboss.org/hibernate/orm/6.1/javadocs/org/hibernate/cfg/Environment.html
      hibernate:
        #default_schema: song
        jdbc:
          time_zone: Europe/Berlin
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        session.events.log.LOG_QUERIES_SLOWER_THAN_MS: 20
        xml_mapping_enabled: false
        #mapping.default_list_semantics: LIST
      # https://stackoverflow.com/questions/31585698/spring-boot-jpa2-hibernate-enable-second-level-cache
      # https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd
      jakarta.persistence:
        sharedCache.mode: ENABLE_SELECTIVE
        validation.mode: NONE

  # siehe org.springframework.boot.autoconfigure.jackson.JacksonProperties
  jackson:
    default-property-inclusion: non_null
    # siehe com.fasterxml.jackson.databind.DeserializationFeature
    deserialization:
      read-enums-using-to-string: true
    # siehe com.fasterxml.jackson.databind.SerializationFeature
    serialization:
      write-enums-using-to-string: true
  lifecycle.timeout-per-shutdown-phase: 3s
  main.lazy-initialization: true
  mvc.problemdetails.enabled: true
  # fuer Images mit GraalVM Native
  native.remove-unused-autoconfig: true
  security.user.password: p
  spel.ignore: true
  ssl.bundle.jks.microservice:
    key:
      alias: microservice
    keystore:
      location: classpath:keystore.p12
      password: zimmermann
      type: PKCS12
    truststore:
      location: classpath:truststore.p12
      password: zimmermann
      type: PKCS12
  threads.virtual.enabled: true

management:
  endpoints.web.exposure.include: "*"
  #endpoint.shutdown.enabled: true
  metrics.tags.application: song
  # Trace every action
  # https://springbootlearning.medium.com/using-micrometer-to-trace-your-spring-boot-app-1fe6ff9982ae
  tracing.sampling.probability: "1.0"

info.app:
  author: Juergen Zimmermann
  lecture: Softwarearchitektur und Microservices
  semester: 3 und 5
  course: Wirtschaftsinformatik und Informatik

---
# alternativ: azure_app_service, sap, heroku
spring.config.activate.on-cloud-platform: kubernetes
management.endpoint.health:
  enabled: true
  probes.enabled: true
  show-details: ALWAYS
spring.lifecycle.timeout-per-shutdown-phase: 30s

---
# --------------------------------------------------------
# P r o f i l e   " d e v "
# --------------------------------------------------------
spring:
  config.activate.on-profile: dev
  datasource:
    password: p
    # SWA: Einstellungen fuer PostgreSQL, MySQL und Oracle
    url: jdbc:postgresql://localhost/song
    #url: jdbc:mysql://localhost/song
    #url: jdbc:oracle:thin:@localhost/FREEPDB1
    username: song
  flyway:
    clean-disabled: false
  devtools.restart:
    #enabled: true
    #poll-interval: 1s
    #quiet-period: 400ms
    trigger-file: .reloadtrigger
  # https://stackoverflow.com/questions/53723613/how-to-set-enableloggingrequestdetails-true-in-spring-boot#answer-62817587
  mvc.log-request-details: true
  jpa.properties:
    # https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/cfg/AvailableSettings.html
    # https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/cfg/Environment.html
    hibernate:
      connection.pool_size: 10
      format_sql: true
      highlight_sql: true
      # https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/tool/schema/internal/script/MultiLineSqlScriptExtractor.html
      #hbm2ddl.import_files_sql_extractor: org.hibernate.tool.schema.internal.script.MultiLineSqlScriptExtractor
      use_sql_comments: true
      # Generierung eines SQL-Skripts mit CREATE TABLE im Wurzelverzeichnis
      # https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#configurations-hbmddl
      #jakarta.persistence.schema-generation.scripts:
      #  action: create
      #  create-target: create.sql
  # Pfad fuer GraphQL: /graphql
  graphql:
    # Pfad fuer GraphiQL: /graphiql
    graphiql.enabled: true
    # Pfad fÃ¼r Schema:   /graphql/schema
    schema.printer.enabled: true
  jackson.serialization.indent-output: true
  #devtools:
  #  livereload.enabled: false
  #  restart.trigger-file: /restart.txt
  # siehe org.springframework.boot.autoconfigure.jackson.JacksonProperties
  # fuer HTTP-Forms
management:
  endpoint:
    health:
      enabled: true
      probes.enabled: true
      show-details: ALWAYS
    shutdown.enabled: true
  info.os.enabled: true

  server:
    # SWA: auskommentieren, um TLS zu deaktivieren
    #http2.enabled: false
    #ssl.enabled: false
    # SWA: Port 8081 statt 8080
    #port: 8081
    # $env:TEMP\tomcat-docbase.* -> src\main\webapp (urspruengl. fuer WAR)
    # Document Base = Context Root, siehe https://tomcat.apache.org/tomcat-10.1-doc/config/context.html
    # $env:TEMP\hsperfdata_<USERNAME>\<PID> Java HotSpot Performance data log: bei jedem Start der JVM neu angelegt.
    # https://support.oracle.com/knowledge/Middleware/2325910_1.html
    # https://blog.mygraphql.com/zh/notes/java/diagnostic/hsperfdata/hsperfdata
    tomcat.basedir: ./build/tomcat
app:
  password: p
  password-falsch: FALSCH
